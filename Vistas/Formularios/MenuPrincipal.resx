<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAN0SURBVGhD1ZmpjxVBEIcfh0JwKAJBIjkTFAHLJUCgYB0E
        BwoMEoElSCwKEhwGAX8AIEAggZBgILDhTBDcv28y8/Lebk13dc2x2V/yJZOZrmP3TXdX9Ux60jZxRtwU
        D8Ur8VX8quGaezxjDGOxWVFtEZfEY/Fb/CsEG2zxga/RtFXcEN+ElVgEfOET34NpvbgieB2sJPoA38Qg
        Vq/aKfi5raBD8EQQsxcdF5+FFWhIiHlCdNI5wSpiBRgDYpNDSBj+EZbjFD/EbbEgDtZwzT2eWTYpyKH4
        j+C1ifznH4gdok08Y4xlm4Jc3K8Tkyfyzt8V60ROjLkjLB8pyCk7sVm+IqvNa7FBeMVYbCxfKVidkkss
        a7BlmOO8KBU2lq8c5GiKXTCySfF+bhalwuansHymIEdzx2YrtwxyUKRFha3lMwe5zoliKlrbPBdRPROW
        zxzkOlcAUhFaAz28FVFha/n0QM5Tdalz2GhSa3+bsIlslA3kXInGIlLPz3JVlAoby5cXcq6aIroja0AJ
        n8R24RVjsbF8lXBWVC2e9bCUp8LTWTGGsZaPUsi96lOthxFeiiOiTTxjjGUbgdzDa3Ebf8ULwVp9sYZr
        7vHMsolS7UFDtohDQ+4r2rB0hdxX/x+w6l+hvibxR3FfXBPsLYfFrppD9T2eMYaxlo9SqkncZRl9I66L
        A2Kt8GqNwAZbfFi+PTwSoY2MjeiUKEm6Tfg4KSKbW7WRlZQS38UFwX+wb+ET38SwYltUpYS3mFsU+8XQ
        2ieIZeUwy7SYQ7lymh2Uo5axdEzkdu1pOY1yDQ2nAWOLmFYuDXMNTa6lvCfGFjGtXGBZS4lSTT3v21Ex
        loiVmpfLmnqUO1ahAdkthhYxUs0OObZ+CMkdbL0Xe8VQ2iOIYcVuaD3YQhzb5SbPF8Em1rfwiW8rZkP2
        aBF5Dnc5TbglIidyS4UPfOVOKFyHu404yvaU2R8EP+kmUaqN4rLAh+V7FnIp/lpT8oGDZY0PGKdF6ksj
        zxjDWO9JIDl0+kpT2vCwg74TFGdUusA190p7YmKHk2/ETxf54NEVYnb+yNeIyZNbnfqEWO4J6xXLFxN2
        yBYU38TILpVdxERkK/dOQg/4wmdqAehdFFNUhJS1nn5iKdhgiw/PkeSgorGgO6LFY9Wh2eZ1YBUBrrlH
        D8sYxk6bkbgmk/979yfZN3n3SAAAAABJRU5ErkJggg==
</value>
  </data>
</root>